services:
  bean:
    build:
      dockerfile: ./bean/docker/Dockerfile.dev
    env_file:
      - ./bean/config/.env.example
      - ./bean/config/.env.dev
    volumes:
      - ./bean:/go/src/bean
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_started

  pear:
    image: nginx:1.25-alpine
    restart: always
    networks:
      - harvest
    volumes:
      - ./pear/html:/usr/share/nginx/html
      - ./pear/config/nginx.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  trellis:
    build:
      context: ./trellis
      dockerfile: ./docker/Dockerfile.dev

  postgres:
    image: postgres:16-alpine
    restart: always
    networks:
      - harvest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bean_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7.2-alpine
    restart: always
    networks:
      - harvest
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  mailhog:
    image: mailhog/mailhog:v1.0.1
    restart: always
    networks:
      - harvest
    ports:
      - "8025:8025"
    volumes:
      - mailhog_data:/var/lib/mailhog

volumes:
  postgres_data:
  redis_data:
  mailhog_data:
